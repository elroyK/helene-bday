{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["keys","37","38","39","40","App","this","disableScroll","$","animate","opacity","duration","delay","fontSize","top","bottom","e","window","event","preventDefault","returnValue","keyCode","addEventListener","onwheel","onmousewheel","document","ontouchmove","onkeydown","preventDefaultForScrollKeys","react_default","a","createElement","className","id","class","onClick","openPresent","href","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","i","randomRotation","Math","floor","random","randomWidth","max","documentElement","clientWidth","innerWidth","randomHeight","clientHeight","innerHeight","randomAnimationDelay","console","log","colors","randomColor","length","confetti","style","left","backgroundColor","transform","animationDelay","appendChild","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36722e90.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport $ from 'jquery';\n\nvar keys = {37: 1, 38: 1, 39: 1, 40: 1};\n\nclass App extends Component {\n    \n    componentDidMount() {\n        this.disableScroll()\n    }\n    \n    openPresent() {\n        $(\"#cta\").animate({\n            opacity: 0\n        }, { duration: 400 })\n        \n        $(\"#sticker\").delay(400).animate({\n            opacity: 0\n        }, { duration: 400 }).animate({\n            fontSize: \"5.5rem\"\n        }, { duration: 400 })\n        \n        $(\"#first-side\").delay(800).animate({\n            top: '-55vh'\n        }, { duration: 1000 });\n\n        $(\"#second-side\").delay(800).animate({\n            bottom: '-55vh'\n        }, { duration: 1000 });\n    }\n    \n    preventDefault(e) {\n        e = e || window.event;\n        if (e.preventDefault)\n            e.preventDefault();\n        e.returnValue = false;  \n    }\n\n    preventDefaultForScrollKeys(e) {\n        if (keys[e.keyCode]) {\n            this.preventDefault(e);\n            return false;\n        }\n    }\n\n    disableScroll() {\n        if (window.addEventListener) // older FF\n            window.addEventListener('DOMMouseScroll', this.preventDefault, false);\n        window.onwheel = this.preventDefault; // modern standard\n        window.onmousewheel = document.onmousewheel = this.preventDefault; // older browsers, IE\n        window.ontouchmove  = this.preventDefault; // mobile\n        document.onkeydown  = this.preventDefaultForScrollKeys;\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div id=\"first-side\"></div>\n                <div id=\"second-side\"></div>\n                <i id =\"sticker\" class=\"fas fa-heart\" onClick={this.openPresent} ></i>\n                <div id=\"cta\">\n                    <span id=\"cta-text\">Click</span>\n                    <i id=\"cta-arrow\" class=\"fas fa-caret-down\"></i>\n                </div>\n                <div id=\"confetti-wrapper\"></div>\n                <div id=\"message-wrapper\">\n                    <div id=\"message\">\n                        <span class=\"emoji\">ðŸ˜»</span>\n                        <h1>Bon anniversaire mon chat!</h1>\n                        <p>Comme promis, une playlist rien que pour toi ! <span>ðŸ’“</span><br/>\n                            Je t'aime fort, passe une bonne journÃ©e ! Ecoute cette playlist dans l'ordre quand t'as le temps <span>ðŸ˜½</span></p>\n                        <a href=\"#\" class=\"message-btn\">Vers Google Play ðŸŽ¶</a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nfor(var i=0; i<200; i++) {\n    // Random rotation\n    var randomRotation = Math.floor(Math.random() * 360);\n    // Random width & height between 0 and viewport\n    var randomWidth = Math.floor(Math.random() * Math.max(document.documentElement.clientWidth, window.innerWidth || 0));\n    var randomHeight =  Math.floor(Math.random() * Math.max(document.documentElement.clientHeight, window.innerHeight || 0));\n\n    // Random animation-delay\n    var randomAnimationDelay = Math.floor(Math.random() * 10);\n    console.log(randomAnimationDelay)\n\n    // Random colors\n    var colors = ['#0CD977', '#FF1C1C', '#FF93DE', '#5767ED', '#FFC61C', '#8497B0']\n    var randomColor = colors[Math.floor(Math.random() * colors.length)];\n\n    // Create confetti piece\n    var confetti = document.createElement('div');\n    confetti.className = 'confetti';\n    confetti.style.top=randomHeight + 'px';\n    confetti.style.left=randomWidth + 'px';\n    confetti.style.backgroundColor=randomColor;\n    confetti.style.transform='skew(15deg) rotate(' + randomRotation + 'deg)';\n    confetti.style.animationDelay=randomAnimationDelay + 's';\n    document.getElementById(\"confetti-wrapper\").appendChild(confetti);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}